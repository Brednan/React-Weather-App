{"version":3,"sources":["Weather-Details/Details.module.css","Components/Title/Title.module.css","Components/Input/FormInput.module.css","Components/Title/Title.js","Components/Input/FormInput.js","Weather-Details/Details.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Title","className","Styles","title","style","position","left","FormInput","props","useState","textVal","setTextVal","onSubmit","event","trim","length","fetch","then","res","ok","json","status","data","submission","catch","alert","preventDefault","value","onChange","target","type","Details","Styled","description","temperature","App","renderer","setData","weather","main","temp","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,YAAc,+B,iBCA3ED,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,+JCSfC,EARD,WAEV,OACI,qBAAKC,UAAWC,IAAOC,MAAOC,MAAO,CAACC,SAAU,WAAYC,KAAM,SAAlE,SACI,4C,gBCwCGC,EA3CG,SAACC,GACf,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAyBF,mBAAS,UAAlC,6BA6BA,OACA,qBAAKR,UAAWC,IAAOK,UAAvB,SACI,uBAAMK,SA1BY,SAACC,GAChBH,EAAQI,OAAOC,OAAS,GACvBC,MALO,qDAKQN,EAJR,wDAKFO,MAAK,SAAAC,GACF,OAAGA,EAAIC,GACID,EAAIE,OAEQ,MAAfF,EAAIG,OACD,WADN,KAIRJ,MAAK,SAAAK,GAAI,OAAId,EAAMe,WAAWD,MAC9BE,OAAM,kBAAMC,MAAM,oCACvBZ,EAAMa,kBAGND,MAAM,6BAUV,UACI,8CAEI,uBAAOE,MAAOjB,EAASkB,SATd,SAACf,GAClBF,EAAWE,EAAMgB,OAAOF,aAUpB,wBAAQG,KAAK,SAAb,sB,gBCzBGC,EAbC,SAACvB,GAEb,OACI,gCACI,sBAAKP,UAAW+B,IAAOC,YAAvB,UACI,+CAAsB,4BAAIzB,EAAMyB,iBAEpC,sBAAKhC,UAAW+B,IAAOE,YAAvB,UACI,+CAAsB,8BAAI1B,EAAM0B,YAAV,mBC2BvBC,MAhCf,WAEE,IACIC,EADJ,EAAwB3B,mBAAS,IAAjC,mBAAOa,EAAP,KAAae,EAAb,KAqBA,MANY,QAATf,EACDc,EAAW,iDAELd,EAAKW,cACXG,EAAW,cAAC,EAAD,CAASH,YAAaX,EAAKW,YAAaC,YAAaZ,EAAKY,eAGrE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWsB,WArBQ,SAACL,GACnBA,EAAIoB,SAAWpB,EAAIqB,KAAKC,KACzBH,EAAQ,CACNJ,YAAaf,EAAIoB,QAAQ,GAAGL,YAC5BC,YAAahB,EAAIqB,KAAKC,KAAKC,aAI7BJ,EAAQnB,MAcPkB,MCrBQM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.730b3473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Details_description__3loTp\",\"temperature\":\"Details_temperature__1zcWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__33jaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormInput\":\"FormInput_FormInput__2APjS\"};","import Styles from './Title.module.css'\r\n\r\nconst Title = () => {\r\n\r\n    return(\r\n        <div className={Styles.title} style={{position: \"relative\", left: \"-20px\"}}>\r\n            <h1>WEATHER</h1>\r\n        </div>)\r\n}\r\n\r\nexport default Title","import React, {useState} from 'react';\r\nimport Styles from './FormInput.module.css'\r\n\r\nconst FormInput = (props) =>{\r\n    const [textVal, setTextVal] = useState('')\r\n    const [unit, setUnits] = useState('metric')\r\n\r\n    const url1st = \"https://api.openweathermap.org/data/2.5/weather?q=\"\r\n    const url2nd = \"&appid=8d6e5706b17fb3303800fea3091696e1&units=metric\"\r\n\r\n    const submitHandler = (event) =>{\r\n        if(textVal.trim().length > 0){\r\n            fetch(url1st + textVal + url2nd)\r\n                .then(res =>{\r\n                    if(res.ok){\r\n                        return res.json()\r\n                    }\r\n                    else if(res.status === 404){\r\n                        return \"404\"\r\n                    }\r\n                })\r\n                .then(data => props.submission(data))\r\n                .catch(() => alert(\"Unable to connect to service!\"))\r\n            event.preventDefault()\r\n        }\r\n        else{\r\n            alert(\"Please enter a location!\")\r\n        }\r\n    }\r\n\r\n    const onTextChange = (event) =>{\r\n        setTextVal(event.target.value)\r\n    }\r\n\r\n    return (\r\n    <div className={Styles.FormInput}>\r\n        <form onSubmit={submitHandler}>\r\n            <label>\r\n                Location:\r\n                <input value={textVal} onChange={onTextChange}/>\r\n            </label>\r\n            <button type=\"submit\">GO</button>\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nexport default FormInput","import React,{useState} from 'react'\r\nimport Styled from './Details.module.css'\r\n\r\nconst Details = (props) =>{\r\n\r\n    return(\r\n        <div>\r\n            <div className={Styled.description}>\r\n                <h1>Description: </h1><p>{props.description}</p>\r\n            </div>\r\n            <div className={Styled.temperature}>\r\n                <h1>Temperature: </h1><p>{props.temperature} Â°C</p>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Details","import './App.css';\nimport Title from './Components/Title/Title'\nimport FormInput from './Components/Input/FormInput.js'\nimport React,{useState} from 'react'\nimport Details from './Weather-Details/Details'\n\nfunction App() {\n\n  const [data, setData] = useState([])\n  let renderer\n\n  const searchLocation = (res) =>{\n    if(res.weather && res.main.temp){\n      setData({\n        description: res.weather[0].description,\n        temperature: res.main.temp.toString()\n    })\n    }\n    else{\n      setData(res)\n    }\n\n  }\n  if(data === \"404\"){\n    renderer = <p>Invalid Location</p>\n  }\n  else if(data.description){\n    renderer = <Details description={data.description} temperature={data.temperature}/>\n  }\n  return (\n    <div className=\"App\">\n      <Title/>\n      <FormInput submission={searchLocation}/>\n      {renderer}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}